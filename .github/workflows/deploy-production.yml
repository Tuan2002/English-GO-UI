name: CI/CD Pipeline

on:
  push:
    branches:
      - main   # Run workflow on push to the main branch

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    environment: Production

    steps:
      # Step 1: Checkout the code
      - name: Checkout Main
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Step 3: Build the Docker Image
      - name: Build Docker Image
        run: |
          docker build -f .docker/Dockerfile \
            --build-arg VITE_BACKEND_URL=${{ vars.VITE_BACKEND_URL }} \
            --build-arg VITE_CLOUD_NAME=${{ vars.VITE_CLOUD_NAME }} \
            --build-arg VITE_CLOUD_BASE_URL=${{ vars.VITE_CLOUD_BASE_URL }} \
            --build-arg VITE_CLOUD_API_KEY=${{ secrets.VITE_CLOUD_API_KEY }} \
            --build-arg VITE_CLOUD_API_SECRET=${{ secrets.VITE_CLOUD_API_SECRET }} \
            --build-arg VITE_CLOUDINARY_URL=${{ secrets.VITE_CLOUDINARY_URL }} \
            --build-arg VITE_AUTH_SERVER_URL=${{ vars.VITE_AUTH_SERVER_URL }} \
            --build-arg VITE_CLIENT_ID=${{ vars.VITE_CLIENT_ID }} \
            --build-arg VITE_REDIRECT_URL=${{ vars.VITE_REDIRECT_URL }} \
          -t ${{ vars.DOCKER_USER }}/english-go-ui:latest .

      # Step 4: Push the Docker Image to Registry
      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ vars.DOCKER_USER }}/english-go-ui:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build
    environment: Production

    steps:
      - name: Deploy on Docker
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.SERVER_HOST }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/${{ vars.SERVER_USER }}/app/reactjs/english-go-ui
            docker-compose pull
            docker-compose down -v
            docker-compose up -d
